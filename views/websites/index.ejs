<%- include('../partials/_header', { user: true }) %>

<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1>My Websites</h1>
    <div class="d-flex">
      <!-- Toggle selection button (when not in selection mode) -->
      <button id="toggleSelectionBtn" class="btn btn-outline-secondary me-3">
        <i class="fas fa-check-square"></i> Select Multiple
      </button>
      
      <!-- These buttons appear when in selection mode -->
      <button id="deleteSelectedBtn" class="btn btn-danger me-3" style="display: none;">
        <i class="fas fa-trash-alt"></i> Delete Selected (<span id="selectedCount">0</span>)
      </button>
      
      <button id="cancelSelectionBtn" class="btn btn-outline-secondary me-3" style="display: none;">
        <i class="fas fa-times"></i> Cancel
      </button>
      
      <a href="/wizard" class="btn btn-primary">
        <i class="fas fa-plus"></i> Create New Website
      </a>
    </div>
  </div>
  
  <% if (websites && websites.length > 0) { %>
    <div class="row">
      <% websites.forEach(website => { %>
        <div class="col-md-6 col-lg-4 mb-4">
          <div class="card h-100 position-relative website-card" data-id="<%= website._id %>">
            <!-- Single delete button (visible when not in selection mode) -->
            <button type="button" class="btn btn-sm position-absolute top-0 end-0 mt-2 me-2 delete-website text-danger single-delete" 
                    data-id="<%= website._id %>" style="background: none; border: none;">
              <i class="fas fa-trash-alt"></i>
            </button>
            
            <!-- The checkbox for multiple selection (initially hidden) -->
            <div class="selection-checkbox position-absolute top-0 end-0 mt-2 me-2" style="display: none;">
              <input type="checkbox" class="website-checkbox form-check-input" data-id="<%= website._id %>">
            </div>
            
            <div class="card-body">
              <h5 class="card-title"><%= website.businessName || 'Unnamed Website' %></h5>
              <p class="card-text text-muted small"><%= website.businessCategory || 'Uncategorized' %></p>
              <p class="card-text">
                <% if (website.businessDescription) { %>
                  <%= website.businessDescription.substring(0, 100) %>
                  <% if (website.businessDescription.length > 100) { %>
                    ...
                  <% } %>
                <% } else { %>
                  No description available.
                <% } %>
              </p>
              
              <div class="status-badge mb-3">
                <% if (website.status === 'completed') { %>
                  <span class="badge bg-success">Completed</span>
                <% } else if (website.status === 'generating') { %>
                  <span class="badge bg-warning">Generating</span>
                <% } else if (website.status === 'failed') { %>
                  <span class="badge bg-danger">Failed</span>
                <% } else { %>
                  <span class="badge bg-secondary">Pending</span>
                <% } %>
                
                <span class="badge bg-info"><%= new Date(website.createdAt).toLocaleDateString() %></span>
              </div>
            </div>
            
            <div class="card-footer bg-transparent">
              <div class="d-flex justify-content-between">
                <a href="/websites/<%= website._id %>" class="btn btn-outline-primary btn-sm card-btn">Details</a>
                
                <% if (website.status === 'completed') { %>
                  <a href="/websites/<%= website._id %>/preview" class="btn btn-primary btn-sm card-btn">Preview</a>
                <% } else if (website.status === 'generating') { %>
                  <a href="/generate/<%= website._id %>" class="btn btn-warning btn-sm card-btn">View Progress</a>
                <% } else if (website.status === 'failed') { %>
                  <a href="/generate/<%= website._id %>/start" class="btn btn-danger btn-sm card-btn">Retry</a>
                <% } else { %>
                  <a href="/generate/<%= website._id %>" class="btn btn-secondary btn-sm card-btn">Generate</a>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      <% }); %>
    </div>
  <% } else { %>
    <div class="alert alert-info">
      <p>You haven't created any websites yet.</p>
      <a href="/wizard" class="btn btn-primary">Create Your First Website</a>
    </div>
  <% } %>
</div>


<!-- Delete Website Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Confirm Deletion</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this website? This action cannot be undone.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
      </div>
    </div>
  </div>
</div>

<!-- Multiple Delete Modal -->
<div class="modal fade" id="multiDeleteModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Confirm Multiple Deletion</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete <span id="deleteCount">0</span> selected websites? This action cannot be undone.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmMultiDelete">Delete All Selected</button>
      </div>
    </div>
  </div>
</div>

<%- include('../partials/_footer') %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Single website deletion
    const deleteButtons = document.querySelectorAll('.single-delete');
    const confirmDeleteBtn = document.getElementById('confirmDelete');
    let websiteToDelete = null;
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.stopPropagation();
        websiteToDelete = this.getAttribute('data-id');
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        deleteModal.show();
      });
    });
    
    confirmDeleteBtn.addEventListener('click', async function() {
      if (!websiteToDelete) return;
      
      try {
        const response = await fetch(`/websites/${websiteToDelete}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        const data = await response.json();
        
        if (data.success) {
          window.location.reload();
        } else {
          alert('Error deleting website: ' + data.message);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error deleting website. Please try again.');
      }
    });
    
    // Multiple selection functionality
    const toggleSelectionBtn = document.getElementById('toggleSelectionBtn');
    const deleteSelectedBtn = document.getElementById('deleteSelectedBtn');
    const cancelSelectionBtn = document.getElementById('cancelSelectionBtn');
    const selectedCount = document.getElementById('selectedCount');
    const deleteCount = document.getElementById('deleteCount');
    const checkboxes = document.querySelectorAll('.website-checkbox');
    const websiteCards = document.querySelectorAll('.website-card');
    const selectionCheckboxes = document.querySelectorAll('.selection-checkbox');
    const cardButtons = document.querySelectorAll('.card-btn');
    const confirmMultiDeleteBtn = document.getElementById('confirmMultiDelete');
    let selectedWebsites = [];
    
    // Toggle selection mode
    toggleSelectionBtn.addEventListener('click', function() {
      // Show selection elements
      selectionCheckboxes.forEach(checkbox => checkbox.style.display = 'block');
      deleteSelectedBtn.style.display = 'block';
      cancelSelectionBtn.style.display = 'block';
      this.style.display = 'none';
      
      // Hide single delete buttons
      document.querySelectorAll('.single-delete').forEach(btn => btn.style.display = 'none');
      
      // Make cards selectable
      websiteCards.forEach(card => card.classList.add('selectable'));
      
      // Reset selection state
      selectedWebsites = [];
      selectedCount.textContent = '0';
      
      // Add click handler to cards for selection
      websiteCards.forEach(card => {
        card.addEventListener('click', handleCardClick);
      });
      
      // Prevent link clicks when in selection mode
      cardButtons.forEach(btn => {
        btn.addEventListener('click', function(e) {
          if (document.querySelector('.selectable')) {
            e.preventDefault();
            e.stopPropagation();
          }
        });
      });
    });
    
    // Cancel selection mode
    cancelSelectionBtn.addEventListener('click', function() {
      exitSelectionMode();
    });
    
    // Handle card clicks for selection
    function handleCardClick(e) {
      if (!e.target.closest('.website-checkbox')) {
        const checkbox = this.querySelector('.website-checkbox');
        checkbox.checked = !checkbox.checked;
        updateSelection(checkbox);
      }
    }
    
    // Handle checkbox clicks
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function(e) {
        e.stopPropagation();
        updateSelection(this);
      });
    });
    
    // Update the selection state
    function updateSelection(checkbox) {
      const websiteId = checkbox.getAttribute('data-id');
      
      if (checkbox.checked) {
        if (!selectedWebsites.includes(websiteId)) {
          selectedWebsites.push(websiteId);
        }
      } else {
        selectedWebsites = selectedWebsites.filter(id => id !== websiteId);
      }
      
      selectedCount.textContent = selectedWebsites.length;
    }
    
    // Exit selection mode
    function exitSelectionMode() {
      selectionCheckboxes.forEach(checkbox => checkbox.style.display = 'none');
      document.querySelectorAll('.single-delete').forEach(btn => btn.style.display = 'block');
      toggleSelectionBtn.style.display = 'block';
      deleteSelectedBtn.style.display = 'none';
      cancelSelectionBtn.style.display = 'none';
      
      // Remove selectable class from cards
      websiteCards.forEach(card => {
        card.classList.remove('selectable');
        card.removeEventListener('click', handleCardClick);
      });
      
      // Uncheck all checkboxes
      checkboxes.forEach(checkbox => checkbox.checked = false);
      
      // Reset selection
      selectedWebsites = [];
      selectedCount.textContent = '0';
    }
    
    // Delete selected button
    deleteSelectedBtn.addEventListener('click', function() {
      if (selectedWebsites.length === 0) {
        alert('Please select at least one website to delete.');
        return;
      }
      
      deleteCount.textContent = selectedWebsites.length;
      const multiDeleteModal = new bootstrap.Modal(document.getElementById('multiDeleteModal'));
      multiDeleteModal.show();
    });
    
    // Confirm multiple delete
    confirmMultiDeleteBtn.addEventListener('click', async function() {
      if (selectedWebsites.length === 0) return;
      
      try {
        // Here we'll make multiple delete requests (or ideally a batch delete API)
        const promises = selectedWebsites.map(id => 
          fetch(`/websites/${id}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          }).then(res => res.json())
        );
        
        const results = await Promise.all(promises);
        const success = results.every(result => result.success);
        
        if (success) {
          window.location.reload();
        } else {
          alert('Error deleting one or more websites. Please try again.');
        }
      } catch (error) {
        console.error('Error deleting websites:', error);
        alert('Error deleting websites. Please try again.');
      }
    });
  });
</script>

<style>
  .website-card.selectable {
    cursor: pointer;
    transition: background-color 0.2s;
  }
  
  .website-card.selectable:hover {
    background-color: rgba(0, 123, 255, 0.1);
  }
  
  .selection-checkbox .form-check-input {
    width: 20px;
    height: 20px;
    cursor: pointer;
  }
</style>